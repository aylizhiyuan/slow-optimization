{"version":3,"sources":["../../../lib/xlsx/xlsx.js"],"names":["fs","require","JSZip","PassThrough","ZipStream","StreamBuf","utils","XmlStream","StylesXform","CoreXform","SharedStringsXform","RelationshipsXform","ContentTypesXform","AppXform","WorkbookXform","WorksheetXform","DrawingXform","TableXform","CommentsXform","VmlNotesXform","theme1Xml","fsReadFileAsync","filename","options","Promise","resolve","reject","readFile","error","data","XLSX","workbook","exists","Error","stream","createReadStream","read","close","xform","parseStream","model","workbookXform","worksheetXform","drawingXform","tableXform","reconcile","drawingOptions","media","mediaIndex","Object","keys","drawings","forEach","name","drawing","drawingRel","drawingRels","rels","reduce","o","rel","Id","anchors","anchor","hyperlinks","picture","rId","hyperlink","Target","tableOptions","styles","values","tables","table","sheetOptions","sharedStrings","date1904","properties","comments","vmlDrawings","worksheets","worksheet","relationships","worksheetRels","sheetNo","worksheetHash","globalRels","workbookRels","sheetDefs","path","push","entry","lastDot","lastIndexOf","extension","substr","streamBuf","on","length","medium","type","buffer","toBuffer","pipe","vmlDrawing","themes","toString","Symbol","asyncIterator","chunks","chunk","load","Buffer","concat","base64","from","loadAsync","zip","files","dir","entryName","match","async","write","content","chunkSize","i","substring","end","parseRels","parseWorkbook","sheets","definedNames","views","calcProperties","appXform","appProperties","company","manager","coreXform","coreProperties","assign","_processWorksheetEntry","_processWorksheetRelsEntry","_processThemeEntry","_processMediaEntry","_processDrawingEntry","_processCommentEntry","_processTableEntry","_processDrawingRelsEntry","_processVmlDrawingEntry","all","map","append","dataimg64","indexOf","relsXform","prepare","xml","toXml","tableXml","target","theme1","Type","RelType","OfficeDocument","CoreProperties","ExtenderProperties","count","Styles","Theme","SharedStrings","Worksheet","id","relationshipsXform","commentsXform","vmlNotesXform","xmlStream","render","finalize","creator","lastModifiedBy","created","Date","modified","useSharedStrings","undefined","useStyles","Mock","worksheetOptions","drawingsCount","commentRefs","tableCount","ZipWriter","prepareModel","addContentTypes","addOfficeRels","addWorkbookRels","addWorksheets","addSharedStrings","addDrawings","addTables","addThemes","addStyles","addMedia","addApp","addCore","addWorkbook","_finalize","createWriteStream","then","module","exports"],"mappings":"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","sourcesContent":["const fs = require('fs');\r\nconst JSZip = require('jszip');\r\nconst {PassThrough} = require('readable-stream');\r\nconst ZipStream = require('../utils/zip-stream');\r\nconst StreamBuf = require('../utils/stream-buf');\r\n\r\nconst utils = require('../utils/utils');\r\nconst XmlStream = require('../utils/xml-stream');\r\n\r\nconst StylesXform = require('./xform/style/styles-xform');\r\n\r\nconst CoreXform = require('./xform/core/core-xform');\r\nconst SharedStringsXform = require('./xform/strings/shared-strings-xform');\r\nconst RelationshipsXform = require('./xform/core/relationships-xform');\r\nconst ContentTypesXform = require('./xform/core/content-types-xform');\r\nconst AppXform = require('./xform/core/app-xform');\r\nconst WorkbookXform = require('./xform/book/workbook-xform');\r\nconst WorksheetXform = require('./xform/sheet/worksheet-xform');\r\nconst DrawingXform = require('./xform/drawing/drawing-xform');\r\nconst TableXform = require('./xform/table/table-xform');\r\nconst CommentsXform = require('./xform/comment/comments-xform');\r\nconst VmlNotesXform = require('./xform/comment/vml-notes-xform');\r\n\r\nconst theme1Xml = require('./xml/theme1.js');\r\n\r\nfunction fsReadFileAsync(filename, options) {\r\n  return new Promise((resolve, reject) => {\r\n    fs.readFile(filename, options, (error, data) => {\r\n      if (error) {\r\n        reject(error);\r\n      } else {\r\n        resolve(data);\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\nclass XLSX {\r\n  constructor(workbook) {\r\n    this.workbook = workbook;\r\n  }\r\n\r\n  // ===============================================================================\r\n  // Workbook\r\n  // =========================================================================\r\n  // Read\r\n\r\n  async readFile(filename, options) {\r\n    if (!(await utils.fs.exists(filename))) {\r\n      throw new Error(`File not found: ${filename}`);\r\n    }\r\n    const stream = fs.createReadStream(filename);\r\n    try {\r\n      const workbook = await this.read(stream, options);\r\n      stream.close();\r\n      return workbook;\r\n    } catch (error) {\r\n      stream.close();\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  parseRels(stream) {\r\n    const xform = new RelationshipsXform();\r\n    return xform.parseStream(stream);\r\n  }\r\n\r\n  parseWorkbook(stream) {\r\n    const xform = new WorkbookXform();\r\n    return xform.parseStream(stream);\r\n  }\r\n\r\n  parseSharedStrings(stream) {\r\n    const xform = new SharedStringsXform();\r\n    return xform.parseStream(stream);\r\n  }\r\n\r\n  reconcile(model, options) {\r\n    const workbookXform = new WorkbookXform();\r\n    const worksheetXform = new WorksheetXform(options);\r\n    const drawingXform = new DrawingXform();\r\n    const tableXform = new TableXform();\r\n\r\n    workbookXform.reconcile(model);\r\n\r\n    // reconcile drawings with their rels\r\n    const drawingOptions = {\r\n      media: model.media,\r\n      mediaIndex: model.mediaIndex,\r\n    };\r\n    Object.keys(model.drawings).forEach(name => {\r\n      const drawing = model.drawings[name];\r\n      const drawingRel = model.drawingRels[name];\r\n      if (drawingRel) {\r\n        drawingOptions.rels = drawingRel.reduce((o, rel) => {\r\n          o[rel.Id] = rel;\r\n          return o;\r\n        }, {});\r\n        (drawing.anchors || []).forEach(anchor => {\r\n          const hyperlinks = anchor.picture && anchor.picture.hyperlinks;\r\n          if (hyperlinks && drawingOptions.rels[hyperlinks.rId]) {\r\n            hyperlinks.hyperlink = drawingOptions.rels[hyperlinks.rId].Target;\r\n            delete hyperlinks.rId;\r\n          }\r\n        });\r\n        drawingXform.reconcile(drawing, drawingOptions);\r\n      }\r\n    });\r\n\r\n    // reconcile tables with the default styles\r\n    const tableOptions = {\r\n      styles: model.styles,\r\n    };\r\n    Object.values(model.tables).forEach(table => {\r\n      tableXform.reconcile(table, tableOptions);\r\n    });\r\n\r\n    const sheetOptions = {\r\n      styles: model.styles,\r\n      sharedStrings: model.sharedStrings,\r\n      media: model.media,\r\n      mediaIndex: model.mediaIndex,\r\n      date1904: model.properties && model.properties.date1904,\r\n      drawings: model.drawings,\r\n      comments: model.comments,\r\n      tables: model.tables,\r\n      vmlDrawings: model.vmlDrawings,\r\n    };\r\n    model.worksheets.forEach(worksheet => {\r\n      worksheet.relationships = model.worksheetRels[worksheet.sheetNo];\r\n      worksheetXform.reconcile(worksheet, sheetOptions);\r\n    });\r\n\r\n    // delete unnecessary parts\r\n    delete model.worksheetHash;\r\n    delete model.worksheetRels;\r\n    delete model.globalRels;\r\n    delete model.sharedStrings;\r\n    delete model.workbookRels;\r\n    delete model.sheetDefs;\r\n    delete model.styles;\r\n    delete model.mediaIndex;\r\n    delete model.drawings;\r\n    delete model.drawingRels;\r\n    delete model.vmlDrawings;\r\n  }\r\n\r\n  async _processWorksheetEntry(stream, model, sheetNo, options, path) {\r\n    const xform = new WorksheetXform(options);\r\n    const worksheet = await xform.parseStream(stream);\r\n    worksheet.sheetNo = sheetNo;\r\n    model.worksheetHash[path] = worksheet;\r\n    model.worksheets.push(worksheet);\r\n  }\r\n\r\n  async _processCommentEntry(stream, model, name) {\r\n    const xform = new CommentsXform();\r\n    const comments = await xform.parseStream(stream);\r\n    model.comments[`../${name}.xml`] = comments;\r\n  }\r\n\r\n  async _processTableEntry(stream, model, name) {\r\n    const xform = new TableXform();\r\n    const table = await xform.parseStream(stream);\r\n    model.tables[`../tables/${name}.xml`] = table;\r\n  }\r\n\r\n  async _processWorksheetRelsEntry(stream, model, sheetNo) {\r\n    const xform = new RelationshipsXform();\r\n    const relationships = await xform.parseStream(stream);\r\n    model.worksheetRels[sheetNo] = relationships;\r\n  }\r\n\r\n  async _processMediaEntry(entry, model, filename) {\r\n    const lastDot = filename.lastIndexOf('.');\r\n    // if we can't determine extension, ignore it\r\n    if (lastDot >= 1) {\r\n      const extension = filename.substr(lastDot + 1);\r\n      const name = filename.substr(0, lastDot);\r\n      await new Promise((resolve, reject) => {\r\n        const streamBuf = new StreamBuf();\r\n        streamBuf.on('finish', () => {\r\n          model.mediaIndex[filename] = model.media.length;\r\n          model.mediaIndex[name] = model.media.length;\r\n          const medium = {\r\n            type: 'image',\r\n            name,\r\n            extension,\r\n            buffer: streamBuf.toBuffer(),\r\n          };\r\n          model.media.push(medium);\r\n          resolve();\r\n        });\r\n        entry.on('error', error => {\r\n          reject(error);\r\n        });\r\n        entry.pipe(streamBuf);\r\n      });\r\n    }\r\n  }\r\n\r\n  async _processDrawingEntry(entry, model, name) {\r\n    const xform = new DrawingXform();\r\n    const drawing = await xform.parseStream(entry);\r\n    model.drawings[name] = drawing;\r\n  }\r\n\r\n  async _processDrawingRelsEntry(entry, model, name) {\r\n    const xform = new RelationshipsXform();\r\n    const relationships = await xform.parseStream(entry);\r\n    model.drawingRels[name] = relationships;\r\n  }\r\n\r\n  async _processVmlDrawingEntry(entry, model, name) {\r\n    const xform = new VmlNotesXform();\r\n    const vmlDrawing = await xform.parseStream(entry);\r\n    model.vmlDrawings[`../drawings/${name}.vml`] = vmlDrawing;\r\n  }\r\n\r\n  async _processThemeEntry(entry, model, name) {\r\n    await new Promise((resolve, reject) => {\r\n      // TODO: stream entry into buffer and store the xml in the model.themes[]\r\n      const stream = new StreamBuf();\r\n      entry.on('error', reject);\r\n      stream.on('error', reject);\r\n      stream.on('finish', () => {\r\n        model.themes[name] = stream.read().toString();\r\n        resolve();\r\n      });\r\n      entry.pipe(stream);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @deprecated since version 4.0. You should use `#read` instead. Please follow upgrade instruction: https://github.com/exceljs/exceljs/blob/master/UPGRADE-4.0.md\r\n   */\r\n  createInputStream() {\r\n    throw new Error(\r\n      '`XLSX#createInputStream` is deprecated. You should use `XLSX#read` instead. This method will be removed in version 5.0. Please follow upgrade instruction: https://github.com/exceljs/exceljs/blob/master/UPGRADE-4.0.md'\r\n    );\r\n  }\r\n\r\n  async read(stream, options) {\r\n    // TODO: Remove once node v8 is deprecated\r\n    // Detect and upgrade old streams\r\n    if (!stream[Symbol.asyncIterator] && stream.pipe) {\r\n      stream = stream.pipe(new PassThrough());\r\n    }\r\n    const chunks = [];\r\n    for await (const chunk of stream) {\r\n      chunks.push(chunk);\r\n    }\r\n    return this.load(Buffer.concat(chunks), options);\r\n  }\r\n\r\n  async load(data, options) {\r\n    let buffer;\r\n    if (options && options.base64) {\r\n      buffer = Buffer.from(data.toString(), 'base64');\r\n    } else {\r\n      buffer = data;\r\n    }\r\n\r\n    const model = {\r\n      worksheets: [],\r\n      worksheetHash: {},\r\n      worksheetRels: [],\r\n      themes: {},\r\n      media: [],\r\n      mediaIndex: {},\r\n      drawings: {},\r\n      drawingRels: {},\r\n      comments: {},\r\n      tables: {},\r\n      vmlDrawings: {},\r\n    };\r\n\r\n    const zip = await JSZip.loadAsync(buffer);\r\n    for (const entry of Object.values(zip.files)) {\r\n      /* eslint-disable no-await-in-loop */\r\n      if (!entry.dir) {\r\n        let entryName = entry.name;\r\n        if (entryName[0] === '/') {\r\n          entryName = entryName.substr(1);\r\n        }\r\n        const stream = new PassThrough();\r\n        if (entryName.match(/xl\\/media\\//)) {\r\n          stream.write(await entry.async('nodebuffer'));\r\n        } else {\r\n          const content = await entry.async('string');\r\n          const chunkSize = 16 * 1024;\r\n          for (let i = 0; i < content.length; i += chunkSize) {\r\n            stream.write(content.substring(i, i + chunkSize));\r\n          }\r\n        }\r\n        stream.end();\r\n        switch (entryName) {\r\n          case '_rels/.rels':\r\n            model.globalRels = await this.parseRels(stream);\r\n            break;\r\n\r\n          case 'xl/workbook.xml': {\r\n            const workbook = await this.parseWorkbook(stream);\r\n            model.sheets = workbook.sheets;\r\n            model.definedNames = workbook.definedNames;\r\n            model.views = workbook.views;\r\n            model.properties = workbook.properties;\r\n            model.calcProperties = workbook.calcProperties;\r\n            break;\r\n          }\r\n\r\n          case 'xl/_rels/workbook.xml.rels':\r\n            model.workbookRels = await this.parseRels(stream);\r\n            break;\r\n\r\n          case 'xl/sharedStrings.xml':\r\n            model.sharedStrings = new SharedStringsXform();\r\n            await model.sharedStrings.parseStream(stream);\r\n            break;\r\n\r\n          case 'xl/styles.xml':\r\n            model.styles = new StylesXform();\r\n            await model.styles.parseStream(stream);\r\n            break;\r\n\r\n          case 'docProps/app.xml': {\r\n            const appXform = new AppXform();\r\n            const appProperties = await appXform.parseStream(stream);\r\n            model.company = appProperties.company;\r\n            model.manager = appProperties.manager;\r\n            break;\r\n          }\r\n\r\n          case 'docProps/core.xml': {\r\n            const coreXform = new CoreXform();\r\n            const coreProperties = await coreXform.parseStream(stream);\r\n            Object.assign(model, coreProperties);\r\n            break;\r\n          }\r\n\r\n          default: {\r\n            let match = entryName.match(/xl\\/worksheets\\/sheet(\\d+)[.]xml/);\r\n            if (match) {\r\n              await this._processWorksheetEntry(stream, model, match[1], options, entryName);\r\n              break;\r\n            }\r\n            match = entryName.match(/xl\\/worksheets\\/_rels\\/sheet(\\d+)[.]xml.rels/);\r\n            if (match) {\r\n              await this._processWorksheetRelsEntry(stream, model, match[1]);\r\n              break;\r\n            }\r\n            match = entryName.match(/xl\\/theme\\/([a-zA-Z0-9]+)[.]xml/);\r\n            if (match) {\r\n              await this._processThemeEntry(stream, model, match[1]);\r\n              break;\r\n            }\r\n            match = entryName.match(/xl\\/media\\/([a-zA-Z0-9]+[.][a-zA-Z0-9]{3,4})$/);\r\n            if (match) {\r\n              await this._processMediaEntry(stream, model, match[1]);\r\n              break;\r\n            }\r\n            match = entryName.match(/xl\\/drawings\\/([a-zA-Z0-9]+)[.]xml/);\r\n            if (match) {\r\n              await this._processDrawingEntry(stream, model, match[1]);\r\n              break;\r\n            }\r\n            match = entryName.match(/xl\\/(comments\\d+)[.]xml/);\r\n            if (match) {\r\n              await this._processCommentEntry(stream, model, match[1]);\r\n              break;\r\n            }\r\n            match = entryName.match(/xl\\/tables\\/(table\\d+)[.]xml/);\r\n            if (match) {\r\n              await this._processTableEntry(stream, model, match[1]);\r\n              break;\r\n            }\r\n            match = entryName.match(/xl\\/drawings\\/_rels\\/([a-zA-Z0-9]+)[.]xml[.]rels/);\r\n            if (match) {\r\n              await this._processDrawingRelsEntry(stream, model, match[1]);\r\n              break;\r\n            }\r\n            match = entryName.match(/xl\\/drawings\\/(vmlDrawing\\d+)[.]vml/);\r\n            if (match) {\r\n              await this._processVmlDrawingEntry(stream, model, match[1]);\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    this.reconcile(model, options);\r\n\r\n    // apply model\r\n    this.workbook.model = model;\r\n    return this.workbook;\r\n  }\r\n\r\n  // =========================================================================\r\n  // Write\r\n\r\n  async addMedia(zip, model) {\r\n    await Promise.all(\r\n      model.media.map(async medium => {\r\n        if (medium.type === 'image') {\r\n          const filename = `xl/media/${medium.name}.${medium.extension}`;\r\n          if (medium.filename) {\r\n            const data = await fsReadFileAsync(medium.filename);\r\n            return zip.append(data, {name: filename});\r\n          }\r\n          if (medium.buffer) {\r\n            return zip.append(medium.buffer, {name: filename});\r\n          }\r\n          if (medium.base64) {\r\n            const dataimg64 = medium.base64;\r\n            const content = dataimg64.substring(dataimg64.indexOf(',') + 1);\r\n            return zip.append(content, {name: filename, base64: true});\r\n          }\r\n        }\r\n        throw new Error('Unsupported media');\r\n      })\r\n    );\r\n  }\r\n\r\n  addDrawings(zip, model) {\r\n    const drawingXform = new DrawingXform();\r\n    const relsXform = new RelationshipsXform();\r\n\r\n    model.worksheets.forEach(worksheet => {\r\n      const {drawing} = worksheet;\r\n      if (drawing) {\r\n        drawingXform.prepare(drawing, {});\r\n        let xml = drawingXform.toXml(drawing);\r\n        zip.append(xml, {name: `xl/drawings/${drawing.name}.xml`});\r\n\r\n        xml = relsXform.toXml(drawing.rels);\r\n        zip.append(xml, {name: `xl/drawings/_rels/${drawing.name}.xml.rels`});\r\n      }\r\n    });\r\n  }\r\n\r\n  addTables(zip, model) {\r\n    const tableXform = new TableXform();\r\n\r\n    model.worksheets.forEach(worksheet => {\r\n      const {tables} = worksheet;\r\n      tables.forEach(table => {\r\n        tableXform.prepare(table, {});\r\n        const tableXml = tableXform.toXml(table);\r\n        zip.append(tableXml, {name: `xl/tables/${table.target}`});\r\n      });\r\n    });\r\n  }\r\n\r\n  async addContentTypes(zip, model) {\r\n    const xform = new ContentTypesXform();\r\n    const xml = xform.toXml(model);\r\n    zip.append(xml, {name: '[Content_Types].xml'});\r\n  }\r\n\r\n  async addApp(zip, model) {\r\n    const xform = new AppXform();\r\n    const xml = xform.toXml(model);\r\n    zip.append(xml, {name: 'docProps/app.xml'});\r\n  }\r\n\r\n  async addCore(zip, model) {\r\n    const coreXform = new CoreXform();\r\n    zip.append(coreXform.toXml(model), {name: 'docProps/core.xml'});\r\n  }\r\n\r\n  async addThemes(zip, model) {\r\n    const themes = model.themes || {theme1: theme1Xml};\r\n    Object.keys(themes).forEach(name => {\r\n      const xml = themes[name];\r\n      const path = `xl/theme/${name}.xml`;\r\n      zip.append(xml, {name: path});\r\n    });\r\n  }\r\n\r\n  async addOfficeRels(zip) {\r\n    const xform = new RelationshipsXform();\r\n    const xml = xform.toXml([\r\n      {Id: 'rId1', Type: XLSX.RelType.OfficeDocument, Target: 'xl/workbook.xml'},\r\n      {Id: 'rId2', Type: XLSX.RelType.CoreProperties, Target: 'docProps/core.xml'},\r\n      {Id: 'rId3', Type: XLSX.RelType.ExtenderProperties, Target: 'docProps/app.xml'},\r\n    ]);\r\n    zip.append(xml, {name: '_rels/.rels'});\r\n  }\r\n\r\n  async addWorkbookRels(zip, model) {\r\n    let count = 1;\r\n    const relationships = [\r\n      {Id: `rId${count++}`, Type: XLSX.RelType.Styles, Target: 'styles.xml'},\r\n      {Id: `rId${count++}`, Type: XLSX.RelType.Theme, Target: 'theme/theme1.xml'},\r\n    ];\r\n    if (model.sharedStrings.count) {\r\n      relationships.push({Id: `rId${count++}`, Type: XLSX.RelType.SharedStrings, Target: 'sharedStrings.xml'});\r\n    }\r\n    model.worksheets.forEach(worksheet => {\r\n      worksheet.rId = `rId${count++}`;\r\n      relationships.push({Id: worksheet.rId, Type: XLSX.RelType.Worksheet, Target: `worksheets/sheet${worksheet.id}.xml`});\r\n    });\r\n    const xform = new RelationshipsXform();\r\n    const xml = xform.toXml(relationships);\r\n    zip.append(xml, {name: 'xl/_rels/workbook.xml.rels'});\r\n  }\r\n\r\n  async addSharedStrings(zip, model) {\r\n    if (model.sharedStrings && model.sharedStrings.count) {\r\n      zip.append(model.sharedStrings.xml, {name: 'xl/sharedStrings.xml'});\r\n    }\r\n  }\r\n\r\n  async addStyles(zip, model) {\r\n    const {xml} = model.styles;\r\n    if (xml) {\r\n      zip.append(xml, {name: 'xl/styles.xml'});\r\n    }\r\n  }\r\n\r\n  async addWorkbook(zip, model) {\r\n    const xform = new WorkbookXform();\r\n    zip.append(xform.toXml(model), {name: 'xl/workbook.xml'});\r\n  }\r\n\r\n  async addWorksheets(zip, model) {\r\n    // preparation phase\r\n    const worksheetXform = new WorksheetXform();\r\n    const relationshipsXform = new RelationshipsXform();\r\n    const commentsXform = new CommentsXform();\r\n    const vmlNotesXform = new VmlNotesXform();\r\n\r\n    // write sheets\r\n    model.worksheets.forEach(worksheet => {\r\n      let xmlStream = new XmlStream();\r\n      worksheetXform.render(xmlStream, worksheet);\r\n      zip.append(xmlStream.xml, {name: `xl/worksheets/sheet${worksheet.id}.xml`});\r\n\r\n      if (worksheet.rels && worksheet.rels.length) {\r\n        xmlStream = new XmlStream();\r\n        relationshipsXform.render(xmlStream, worksheet.rels);\r\n        zip.append(xmlStream.xml, {name: `xl/worksheets/_rels/sheet${worksheet.id}.xml.rels`});\r\n      }\r\n\r\n      if (worksheet.comments.length > 0) {\r\n        xmlStream = new XmlStream();\r\n        commentsXform.render(xmlStream, worksheet);\r\n        zip.append(xmlStream.xml, {name: `xl/comments${worksheet.id}.xml`});\r\n\r\n        xmlStream = new XmlStream();\r\n        vmlNotesXform.render(xmlStream, worksheet);\r\n        zip.append(xmlStream.xml, {name: `xl/drawings/vmlDrawing${worksheet.id}.vml`});\r\n      }\r\n    });\r\n  }\r\n\r\n  _finalize(zip) {\r\n    return new Promise((resolve, reject) => {\r\n      zip.on('finish', () => {\r\n        resolve(this);\r\n      });\r\n      zip.on('error', reject);\r\n      zip.finalize();\r\n    });\r\n  }\r\n\r\n  prepareModel(model, options) {\r\n    // ensure following properties have sane values\r\n    model.creator = model.creator || 'ExcelJS';\r\n    model.lastModifiedBy = model.lastModifiedBy || 'ExcelJS';\r\n    model.created = model.created || new Date();\r\n    model.modified = model.modified || new Date();\r\n\r\n    model.useSharedStrings = options.useSharedStrings !== undefined ? options.useSharedStrings : true;\r\n    model.useStyles = options.useStyles !== undefined ? options.useStyles : true;\r\n\r\n    // Manage the shared strings\r\n    model.sharedStrings = new SharedStringsXform();\r\n\r\n    // add a style manager to handle cell formats, fonts, etc.\r\n    model.styles = model.useStyles ? new StylesXform(true) : new StylesXform.Mock();\r\n\r\n    // prepare all of the things before the render\r\n    const workbookXform = new WorkbookXform();\r\n    const worksheetXform = new WorksheetXform();\r\n\r\n    workbookXform.prepare(model);\r\n\r\n    const worksheetOptions = {\r\n      sharedStrings: model.sharedStrings,\r\n      styles: model.styles,\r\n      date1904: model.properties.date1904,\r\n      drawingsCount: 0,\r\n      media: model.media,\r\n    };\r\n    worksheetOptions.drawings = model.drawings = [];\r\n    worksheetOptions.commentRefs = model.commentRefs = [];\r\n    let tableCount = 0;\r\n    model.tables = [];\r\n    model.worksheets.forEach(worksheet => {\r\n      // assign unique filenames to tables\r\n      worksheet.tables.forEach(table => {\r\n        tableCount++;\r\n        table.target = `table${tableCount}.xml`;\r\n        table.id = tableCount;\r\n        model.tables.push(table);\r\n      });\r\n\r\n      worksheetXform.prepare(worksheet, worksheetOptions);\r\n    });\r\n\r\n    // TODO: workbook drawing list\r\n  }\r\n\r\n  async write(stream, options) {\r\n    options = options || {};\r\n    const {model} = this.workbook;\r\n    const zip = new ZipStream.ZipWriter(options.zip);\r\n    zip.pipe(stream);\r\n\r\n    this.prepareModel(model, options);\r\n\r\n    // render\r\n    await this.addContentTypes(zip, model);\r\n    await this.addOfficeRels(zip, model);\r\n    await this.addWorkbookRels(zip, model);\r\n    await this.addWorksheets(zip, model);\r\n    await this.addSharedStrings(zip, model); // always after worksheets\r\n    await this.addDrawings(zip, model);\r\n    await this.addTables(zip, model);\r\n    await Promise.all([this.addThemes(zip, model), this.addStyles(zip, model)]);\r\n    await this.addMedia(zip, model);\r\n    await Promise.all([this.addApp(zip, model), this.addCore(zip, model)]);\r\n    await this.addWorkbook(zip, model);\r\n    return this._finalize(zip);\r\n  }\r\n\r\n  writeFile(filename, options) {\r\n    const stream = fs.createWriteStream(filename);\r\n\r\n    return new Promise((resolve, reject) => {\r\n      stream.on('finish', () => {\r\n        resolve();\r\n      });\r\n      stream.on('error', error => {\r\n        reject(error);\r\n      });\r\n\r\n      this.write(stream, options).then(() => {\r\n        stream.end();\r\n      });\r\n    });\r\n  }\r\n\r\n  async writeBuffer(options) {\r\n    const stream = new StreamBuf();\r\n    await this.write(stream, options);\r\n    return stream.read();\r\n  }\r\n}\r\n\r\nXLSX.RelType = require('./rel-type');\r\n\r\nmodule.exports = XLSX;\r\n"],"file":"xlsx.js"}